import 'package:flutter/material.dart';

import '../../../../Data/model/api/SeriesPostResponse/panchang_response.dart';
import '../../../../Utility/common.dart';

String getSuryodayaText(PanditData data, int index) {
  Risenset? risenset = data.content?.risenset;
  Panchang? panchang = data.content?.panchang;
  Lunar? lunar = data.content?.lunar;
  switch (index) {
    case 1:
      return "--   ‡§∏‡•Ç‡§∞‡•ç‡§Ø‡•ã‡§¶‡§Ø ‡§è‡§µ‡§Ç ‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡•ã‡§¶‡§Ø üåÑ  -- \n‡§∏‡•Ç‡§∞‡•ç‡§Ø‡•ã‡§¶‡§Ø ${risenset?.sunrise?.first} \n‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡•ã‡§¶‡§Ø ${risenset?.moonrise?.first}\n‡§∏‡•Ç‡§∞‡•ç‡§Ø‡§æ‡§∏‡•ç‡§§ ${risenset?.sunset?.first}\n‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§æ‡§∏‡•ç‡§§ ${risenset?.moonset?.first}\n\n--   ‡§™‡§û‡•ç‡§ö‡§æ‡§ô‡•ç‡§ó   --\n‡§§‡§ø‡§•‡§ø ${panchang?.tithi?.first}\n‡§Ø‡•ã‡§ó ${panchang?.yog?.first}\n‡§µ‡§æ‡§∞ ${panchang?.day?.first}\n‡§™‡§ï‡•ç‡§∑ ${panchang?.paksha?.first}\n‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ ${panchang?.nakshatra?.first}\n‡§ï‡§∞‡§£ ${panchang?.karana?.first} ";
    case 2:
      return "--   ‡§ö‡§®‡•ç‡§¶‡•ç‡§∞ ‡§Æ‡§æ‡§∏ ‡§è‡§µ‡§Ç ‡§∏‡§Æ‡•ç‡§µ‡§§   --\n‡§∂‡§ï ‡§∏‡§Æ‡•ç‡§µ‡§§ ${data.content?.lunar?.shaka?.first}\n‡§µ‡§ø‡§ï‡•ç‡§∞‡§Æ ‡§∏‡§Æ‡•ç‡§µ‡§§ ${data.content?.lunar?.vikram?.first}\n‡§ó‡•Å‡§ú‡§∞‡§æ‡§§‡•Ä ‡§∏‡§Æ‡•ç‡§µ‡§§ ${data.content?.lunar?.gujarati?.first}\n‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§Æ‡§æ‡§∏ ${data.content?.lunar?.chandramasa?.first}\n\n--   ‡§∞‡§æ‡§∂‡§ø ‡§§‡§•‡§æ ‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞   --\n‡§ö‡§®‡•ç‡§¶‡•ç‡§∞ ‡§∞‡§æ‡§∂‡§ø ${data.content?.rashi?.moonsign?.first}\n‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§∞‡§æ‡§∂‡§ø ${data.content?.rashi?.sunsign?.first}\n‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ ${data.content?.rashi?.sunNakshatra?.first}\n‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ ‡§™‡§¶ ${data.content?.rashi?.sunNakshatraPada?.first}\n‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ ‡§™‡§¶ ${data.content?.rashi?.nakshatraPada?.first}\n";
    case 3:
      return "--   ‡§ã‡§§‡•Å ‡§î‡§∞ ‡§Ö‡§Ø‡§®   --\n‡§¶‡•ç‡§∞‡§ø‡§ï ‡§ã‡§§‡•Å ${data.content?.rituayana?.drikRitu?.first}\n‡§µ‡•à‡§¶‡§ø‡§ï ‡§ã‡§§‡•Å ${data.content?.rituayana?.vedicRitu?.first}\n‡§¶‡•ç‡§∞‡§ø‡§ï ‡§Ö‡§Ø‡§® ${data.content?.rituayana?.drikAyana?.first}\n‡§µ‡•à‡§¶‡§ø‡§ï ‡§Ö‡§Ø‡§® ${data.content?.rituayana?.vedicAyana?.first}\n‡§¶‡§ø‡§®‡§Æ‡§æ‡§® ${data.content?.rituayana?.dinamana?.first}\n‡§∞‡§æ‡§§‡•ç‡§∞‡§ø‡§Æ‡§æ‡§® ${data.content?.rituayana?.ratrimana?.first}\n‡§Æ‡§ß‡•ç‡§Ø‡§æ‡§π‡•ç‡§® ${data.content?.rituayana?.madhyahna?.first}\n";
    case 4:
      return "--   ‡§Ö‡§®‡•ç‡§Ø ‡§ï‡•à‡§≤‡•á‡§Ç‡§°‡§∞   --\n‡§ï‡§≤‡§ø‡§Ø‡•Å‡§ó ${data.content?.calender?.kaliyuga?.first}\n‡§ï‡§≤‡§ø ‡§Ö‡§π‡§∞‡•ç‡§ó‡§£ ${data.content?.calender?.kaliAhargana?.first}\n‡§ú‡•Ç‡§≤‡§ø‡§Ø‡§® ‡§¶‡§ø‡§®‡§æ‡§ô‡•ç‡§ï ${data.content?.calender?.julianDate?.first}\n‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§¶‡§ø‡§®‡§æ‡§ô‡•ç‡§ï ${data.content?.calender?.nationalCivilDate?.first}\n‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§®‡§ø‡§∞‡§Ø‡§£ ‡§¶‡§ø‡§®‡§æ‡§ô‡•ç‡§ï ${data.content?.calender?.nationalNirayanaDate?.first}\n‡§≤‡§æ‡§π‡§ø‡§∞‡•Ä ‡§Ö‡§Ø‡§®‡§æ‡§Ç‡§∂ ${data.content?.calender?.lahiriAyanamsha?.first}\n‡§∞‡§æ‡§ü‡§æ ‡§°‡§æ‡§à ${data.content?.calender?.rataDie?.first}\n‡§ú‡•Ç‡§≤‡§ø‡§Ø‡§® ‡§¶‡§ø‡§® ${data.content?.calender?.julianDay?.first}\n‡§∏‡§Ç‡§∂‡•ã‡§ß‡§ø‡§§ ‡§ú‡•Ç‡§≤‡§ø‡§Ø‡§® ‡§¶‡§ø‡§® ${data.content?.calender?.modifiedJulianDay?.first}\n";
    case 5:
      return "--   ‡§∂‡•Å‡§≠ ‡§∏‡§Æ‡§Ø   --\n${data.content?.auspicious?.map((item) => '${item.hi![0]} - ${item.hi![1]}').join('\n') ?? ''}\n";
    case 6:
      return "--   ‡§Ö‡§∂‡•Å‡§≠ ‡§∏‡§Æ‡§Ø   --\n${data.content?.inauspicious?.map((item) => '${item.hi![0]} - ${item.hi![1]}').join('\n') ?? ''}\n";
    case 7:
      return "--   ‡§™‡§Ç‡§ö‡§ï ‡§∞‡§π‡§ø‡§§   --\n${data.content?.panchak?.panchakRahita?.map((item) => '${item.hi![0]} - ${item.hi![1]}').join('\n') ?? ''}\n";
    case 8:
      return "--   ‡§â‡§¶‡§Ø ‡§≤‡§ó‡•ç‡§®   --\n${data.content?.panchak?.udayaLagna?.map((item) => '${item.hi![0]} - ${item.hi![1]}').join('\n') ?? ''}\n";

    default:
      return "";
  }
}

String getSuryodayaTextForCopy(PanditData data, int index) {
  Risenset? risenset = data.content?.risenset;
  Panchang? panchang = data.content?.panchang;
  Lunar? lunar = data.content?.lunar;
  switch (index) {
    case 1:
      return "-- üåÑ  ‡§∏‡•Ç‡§∞‡•ç‡§Ø‡•ã‡§¶‡§Ø ‡§è‡§µ‡§Ç ‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡•ã‡§¶‡§Ø üåÑ  -- \n‡§∏‡•Ç‡§∞‡•ç‡§Ø‡•ã‡§¶‡§Ø - ${risenset?.sunrise?.first} \n‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡•ã‡§¶‡§Ø - ${risenset?.moonrise?.first}\n‡§∏‡•Ç‡§∞‡•ç‡§Ø‡§æ‡§∏‡•ç‡§§ - ${risenset?.sunset?.first}\n‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§æ‡§∏‡•ç‡§§ - ${risenset?.moonset?.first}\n\n--   ‡§™‡§û‡•ç‡§ö‡§æ‡§ô‡•ç‡§ó   --\n‡§§‡§ø‡§•‡§ø - ${panchang?.tithi?.first}\n‡§Ø‡•ã‡§ó - ${panchang?.yog?.first}\n‡§µ‡§æ‡§∞ - ${panchang?.day?.first}\n‡§™‡§ï‡•ç‡§∑ - ${panchang?.paksha?.first}\n‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ - ${panchang?.nakshatra?.first}\n‡§ï‡§∞‡§£ - ${panchang?.karana?.first} ";
    case 2:
      return "--  üåô ‡§ö‡§®‡•ç‡§¶‡•ç‡§∞ ‡§Æ‡§æ‡§∏ ‡§è‡§µ‡§Ç ‡§∏‡§Æ‡•ç‡§µ‡§§ üåô  --\n‡§∂‡§ï ‡§∏‡§Æ‡•ç‡§µ‡§§ - ${data.content?.lunar?.shaka?.first}\n‡§µ‡§ø‡§ï‡•ç‡§∞‡§Æ ‡§∏‡§Æ‡•ç‡§µ‡§§ - ${data.content?.lunar?.vikram?.first}\n‡§ó‡•Å‡§ú‡§∞‡§æ‡§§‡•Ä ‡§∏‡§Æ‡•ç‡§µ‡§§ - ${data.content?.lunar?.gujarati?.first}\n‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§Æ‡§æ‡§∏ - ${data.content?.lunar?.chandramasa?.first}\n\n--   ‡§∞‡§æ‡§∂‡§ø ‡§§‡§•‡§æ ‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞   --\n‡§ö‡§®‡•ç‡§¶‡•ç‡§∞ ‡§∞‡§æ‡§∂‡§ø - ${data.content?.rashi?.moonsign?.first}\n‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§∞‡§æ‡§∂‡§ø - ${data.content?.rashi?.sunsign?.first}\n‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ - ${data.content?.rashi?.sunNakshatra?.first}\n‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ ‡§™‡§¶ - ${data.content?.rashi?.sunNakshatraPada?.first}\n‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ ‡§™‡§¶ - ${data.content?.rashi?.nakshatraPada?.first}\n";
    case 3:
      return "--   ‡§ã‡§§‡•Å ‡§î‡§∞ ‡§Ö‡§Ø‡§®   --\n‡§¶‡•ç‡§∞‡§ø‡§ï ‡§ã‡§§‡•Å - ${data.content?.rituayana?.drikRitu?.first}\n‡§µ‡•à‡§¶‡§ø‡§ï ‡§ã‡§§‡•Å - ${data.content?.rituayana?.vedicRitu?.first}\n‡§¶‡•ç‡§∞‡§ø‡§ï ‡§Ö‡§Ø‡§® - ${data.content?.rituayana?.drikAyana?.first}\n‡§µ‡•à‡§¶‡§ø‡§ï ‡§Ö‡§Ø‡§® - ${data.content?.rituayana?.vedicAyana?.first}\n‡§¶‡§ø‡§®‡§Æ‡§æ‡§® - ${data.content?.rituayana?.dinamana?.first}\n‡§∞‡§æ‡§§‡•ç‡§∞‡§ø‡§Æ‡§æ‡§® - ${data.content?.rituayana?.ratrimana?.first}\n‡§Æ‡§ß‡•ç‡§Ø‡§æ‡§π‡•ç‡§® - ${data.content?.rituayana?.madhyahna?.first}\n";
    case 4:
      return "--   ‡§Ö‡§®‡•ç‡§Ø ‡§ï‡•à‡§≤‡•á‡§Ç‡§°‡§∞   --\n‡§ï‡§≤‡§ø‡§Ø‡•Å‡§ó - ${data.content?.calender?.kaliyuga?.first}\n‡§ï‡§≤‡§ø ‡§Ö‡§π‡§∞‡•ç‡§ó‡§£ - ${data.content?.calender?.kaliAhargana?.first}\n‡§ú‡•Ç‡§≤‡§ø‡§Ø‡§® ‡§¶‡§ø‡§®‡§æ‡§ô‡•ç‡§ï - ${data.content?.calender?.julianDate?.first}\n‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§¶‡§ø‡§®‡§æ‡§ô‡•ç‡§ï - ${data.content?.calender?.nationalCivilDate?.first}\n‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§®‡§ø‡§∞‡§Ø‡§£ ‡§¶‡§ø‡§®‡§æ‡§ô‡•ç‡§ï - ${data.content?.calender?.nationalNirayanaDate?.first}\n‡§≤‡§æ‡§π‡§ø‡§∞‡•Ä ‡§Ö‡§Ø‡§®‡§æ‡§Ç‡§∂ - ${data.content?.calender?.lahiriAyanamsha?.first}\n‡§∞‡§æ‡§ü‡§æ ‡§°‡§æ‡§à - ${data.content?.calender?.rataDie?.first}\n‡§ú‡•Ç‡§≤‡§ø‡§Ø‡§® ‡§¶‡§ø‡§® - ${data.content?.calender?.julianDay?.first}\n‡§∏‡§Ç‡§∂‡•ã‡§ß‡§ø‡§§ ‡§ú‡•Ç‡§≤‡§ø‡§Ø‡§® ‡§¶‡§ø‡§® - ${data.content?.calender?.modifiedJulianDay?.first}\n";
    case 5:
      return "--   ‡§∂‡•Å‡§≠ ‡§∏‡§Æ‡§Ø   --\n${data.content?.auspicious?.map((item) => '${item.hi![0]} - ${item.hi![1]}').join('\n') ?? ''}\n";
    case 6:
      return "--   ‡§Ö‡§∂‡•Å‡§≠ ‡§∏‡§Æ‡§Ø   --\n${data.content?.inauspicious?.map((item) => '${item.hi![0]} - ${item.hi![1]}').join('\n') ?? ''}\n";
    case 7:
      return "--   ‡§™‡§Ç‡§ö‡§ï ‡§∞‡§π‡§ø‡§§   --\n${data.content?.panchak?.panchakRahita?.map((item) => '${item.hi![0]} - ${item.hi![1]}').join('\n') ?? ''}\n";
    case 8:
      return "--   ‡§â‡§¶‡§Ø ‡§≤‡§ó‡•ç‡§®   --\n${data.content?.panchak?.udayaLagna?.map((item) => '${item.hi![0]} - ${item.hi![1]}').join('\n') ?? ''}\n";

    default:
      return "";
  }
}

class PanchangSurvodayaWidget extends StatelessWidget {
  // const PanchangSurvodayaWidget({super.key});
  final PanchangBg bgImage;
  final PanditData data;
  const PanchangSurvodayaWidget({
    Key? key,
    required this.bgImage,
    required this.data,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final mq = MediaQuery.of(context).size;
    return Column(
      children: [
        Text(
          '--   ‡§∏‡•Ç‡§∞‡•ç‡§Ø‡•ã‡§¶‡§Ø ‡§è‡§µ‡§Ç ‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡•ã‡§¶‡§Ø   --',
          textScaleFactor: 1,
          style: TextStyle(
            color: hexToColor(bgImage.indexColor ?? ""),
            fontSize: mq.width * 0.033,
            fontWeight: FontWeight.bold,
          ),
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          leftPadding: 3,
          title: '‡§∏‡•Ç‡§∞‡•ç‡§Ø‡•ã‡§¶‡§Ø',
          info: data.content?.risenset?.sunrise?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          leftPadding: 3,
          title: '‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡•ã‡§¶‡§Ø',
          info: data.content?.risenset?.moonrise?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          leftPadding: 3,
          title: '‡§∏‡•Ç‡§∞‡•ç‡§Ø‡§æ‡§∏‡•ç‡§§',
          info: data.content?.risenset?.sunset?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          leftPadding: 3,
          title: '‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§æ‡§∏‡•ç‡§§',
          info: data.content?.risenset?.moonset?.first,
        ),
        const SizedBox(height: 15),
        Text(
          '--   ‡§™‡§û‡•ç‡§ö‡§æ‡§ô‡•ç‡§ó   --',
          style: TextStyle(
            color: hexToColor(bgImage.indexColor ?? ""),
            fontSize: mq.width * 0.033,
            fontWeight: FontWeight.bold,
          ),
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§§‡§ø‡§•‡§ø',
          leftPadding: 3,
          info: data.content?.panchang?.tithi?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§Ø‡•ã‡§ó',
          leftPadding: 3,
          info: data.content?.panchang?.yog?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§µ‡§æ‡§∞',
          leftPadding: 3,
          info: data.content?.panchang?.day?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          leftPadding: 3,
          title: '‡§™‡§ï‡•ç‡§∑',
          info: data.content?.panchang?.paksha?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞',
          leftPadding: 3,
          info: data.content?.panchang?.nakshatra?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          leftPadding: 3,
          title: '‡§ï‡§∞‡§£',
          info: data.content?.panchang?.karana?.first,
        ),
      ],
    );
  }
}

class PanchangChandraMasWidget extends StatelessWidget {
  // const PanchangSurvodayaWidget({super.key});
  final PanchangBg bgImage;
  final PanditData data;
  const PanchangChandraMasWidget({
    Key? key,
    required this.bgImage,
    required this.data,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final mq = MediaQuery.of(context).size;
    return Column(
      children: [
        Text(
          '--   ‡§ö‡§®‡•ç‡§¶‡•ç‡§∞ ‡§Æ‡§æ‡§∏ ‡§è‡§µ‡§Ç ‡§∏‡§Æ‡•ç‡§µ‡§§   --',
          style: TextStyle(
            fontWeight: FontWeight.bold,
            color: hexToColor(bgImage.indexColor ?? ""),
            fontSize: mq.width * 0.033,
          ),
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§∂‡§ï ‡§∏‡§Æ‡•ç‡§µ‡§§',
          leftPadding: 3,
          info: data.content?.lunar?.shaka?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§µ‡§ø‡§ï‡•ç‡§∞‡§Æ ‡§∏‡§Æ‡•ç‡§µ‡§§',
          leftPadding: 3,
          info: data.content?.lunar?.vikram?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§ó‡•Å‡§ú‡§∞‡§æ‡§§‡•Ä ‡§∏‡§Æ‡•ç‡§µ‡§§',
          leftPadding: 3,
          info: data.content?.lunar?.gujarati?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§ö‡§®‡•ç‡§¶‡•ç‡§∞‡§Æ‡§æ‡§∏',
          leftPadding: 3,
          info: data.content?.lunar?.chandramasa?.first,
        ),
        const SizedBox(height: 15),
        Text(
          '--   ‡§∞‡§æ‡§∂‡§ø ‡§§‡§•‡§æ ‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞   --',
          style: TextStyle(
            color: hexToColor(bgImage.indexColor ?? ""),
            fontSize: mq.width * 0.033,
            fontWeight: FontWeight.bold,
          ),
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§ö‡§®‡•ç‡§¶‡•ç‡§∞ ‡§∞‡§æ‡§∂‡§ø',
          leftPadding: 3,
          info: data.content?.rashi?.moonsign?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§∞‡§æ‡§∂‡§ø',
          leftPadding: 3,
          info: data.content?.rashi?.sunsign?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞',
          leftPadding: 3,
          info: data.content?.rashi?.sunNakshatra?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§∏‡•Ç‡§∞‡•ç‡§Ø ‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ ‡§™‡§¶',
          leftPadding: 3,
          info: data.content?.rashi?.sunNakshatraPada?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§®‡§ï‡•ç‡§∑‡§§‡•ç‡§∞ ‡§™‡§¶',
          leftPadding: 3,
          info: data.content?.rashi?.nakshatraPada?.first,
        ),
      ],
    );
  }
}

class PanchangRituAyanWidget extends StatelessWidget {
  // const PanchangSurvodayaWidget({super.key});
  final PanchangBg bgImage;
  final PanditData data;
  const PanchangRituAyanWidget({
    Key? key,
    required this.bgImage,
    required this.data,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    double fontsize = 18;
    return Column(
      children: [
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§¶‡•ç‡§∞‡§ø‡§ï ‡§ã‡§§‡•Å',
          leftPadding: 3,
          info: data.content?.rituayana?.drikRitu?.first,
          founsize: fontsize,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§µ‡•à‡§¶‡§ø‡§ï ‡§ã‡§§‡•Å',
          leftPadding: 3,
          info: data.content?.rituayana?.vedicRitu?.first,
          founsize: fontsize,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          leftPadding: 3,
          title: '‡§¶‡•ç‡§∞‡§ø‡§ï ‡§Ö‡§Ø‡§®',
          info: data.content?.rituayana?.drikAyana?.first,
          founsize: fontsize,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§µ‡•à‡§¶‡§ø‡§ï ‡§Ö‡§Ø‡§®',
          leftPadding: 3,
          info: data.content?.rituayana?.vedicAyana?.first,
          founsize: fontsize,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          founsize: fontsize,
          leftPadding: 3,
          title: '‡§¶‡§ø‡§®‡§Æ‡§æ‡§®',
          info: data.content?.rituayana?.dinamana?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          founsize: fontsize,
          title: '‡§∞‡§æ‡§§‡•ç‡§∞‡§ø‡§Æ‡§æ‡§®',
          leftPadding: 3,
          info: data.content?.rituayana?.ratrimana?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          title: '‡§Æ‡§ß‡•ç‡§Ø‡§æ‡§π‡•ç‡§®',
          founsize: fontsize,
          leftPadding: 3,
          info: data.content?.rituayana?.madhyahna?.first,
        ),
      ],
    );
  }
}

class PanchangAnyaCalenderWidget extends StatelessWidget {
  // const PanchangSurvodayaWidget({super.key});
  final PanchangBg bgImage;
  final PanditData data;
  const PanchangAnyaCalenderWidget({
    Key? key,
    required this.bgImage,
    required this.data,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    double fontsize = 16;
    int infoFlext = 5;
    int titleFlext = 5;
    return Column(
      children: [
        PanchangContentWidget(
          infoFlex: infoFlext,
          titleFlex: titleFlext,
          bgImage: bgImage,
          data: data,
          title: '‡§ï‡§≤‡§ø‡§Ø‡•Å‡§ó',
          info: data.content?.calender?.kaliyuga?.first,
          founsize: fontsize,
        ),
        PanchangContentWidget(
          infoFlex: infoFlext,
          titleFlex: titleFlext,
          bgImage: bgImage,
          data: data,
          title: '‡§ï‡§≤‡§ø ‡§Ö‡§π‡§∞‡•ç‡§ó‡§£',
          info: data.content?.calender?.kaliAhargana?.first,
          founsize: fontsize,
        ),
        PanchangContentWidget(
          infoFlex: infoFlext,
          titleFlex: titleFlext,
          bgImage: bgImage,
          data: data,
          title: '‡§ú‡•Ç‡§≤‡§ø‡§Ø‡§® ‡§¶‡§ø‡§®‡§æ‡§ô‡•ç‡§ï',
          info: data.content?.calender?.julianDate?.first,
          founsize: fontsize,
        ),
        PanchangContentWidget(
          infoFlex: infoFlext,
          titleFlex: titleFlext,
          bgImage: bgImage,
          data: data,
          title: '‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§¶‡§ø‡§®‡§æ‡§ô‡•ç‡§ï',
          info: data.content?.calender?.nationalCivilDate?.first,
          founsize: fontsize,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          infoFlex: infoFlext,
          titleFlex: titleFlext,
          data: data,
          founsize: fontsize,
          title: '‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§®‡§ø‡§∞‡§Ø‡§£ ‡§¶‡§ø‡§®‡§æ‡§ô‡•ç‡§ï',
          info: data.content?.calender?.nationalNirayanaDate?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          infoFlex: infoFlext,
          titleFlex: titleFlext,
          data: data,
          founsize: fontsize,
          title: '‡§≤‡§æ‡§π‡§ø‡§∞‡•Ä ‡§Ö‡§Ø‡§®‡§æ‡§Ç‡§∂',
          info: data.content?.calender?.lahiriAyanamsha?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          data: data,
          infoFlex: infoFlext,
          titleFlex: titleFlext,
          title: '‡§∞‡§æ‡§ü‡§æ ‡§°‡§æ‡§à',
          founsize: fontsize,
          info: data.content?.calender?.rataDie?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          infoFlex: infoFlext,
          titleFlex: titleFlext,
          data: data,
          title: '‡§ú‡•Ç‡§≤‡§ø‡§Ø‡§® ‡§¶‡§ø‡§®',
          founsize: fontsize,
          info: data.content?.calender?.julianDay?.first,
        ),
        PanchangContentWidget(
          bgImage: bgImage,
          infoFlex: infoFlext,
          titleFlex: titleFlext,
          data: data,
          // leftPadding: 3,
          title: '‡§∏‡§Ç‡§∂‡•ã‡§ß‡§ø‡§§ ‡§ú‡•Ç‡§≤‡§ø‡§Ø‡§® ‡§¶‡§ø‡§®',
          founsize: fontsize,
          info: data.content?.calender?.modifiedJulianDay?.first,
        ),
      ],
    );
  }
}

class PanchangShubhSamayWidget extends StatelessWidget {
  // const PanchangSurvodayaWidget({super.key});
  final PanchangBg bgImage;
  final PanditData data;
  const PanchangShubhSamayWidget({
    Key? key,
    required this.bgImage,
    required this.data,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    double fontsize = 14;
    int infoFlext = 6;
    int titleFlext = 4;
    return Column(
      children: [
        ...List.generate(data.content?.auspicious?.length ?? 0, (index) {
          return PanchangContentWidget(
            infoFlex: infoFlext,
            titleFlex: titleFlext,
            leftPadding: 3,
            bgImage: bgImage,
            data: data,
            title: data.content?.auspicious?[index].hi![0],
            info: data.content?.auspicious?[index].hi![1],
            founsize: fontsize,
          );
        }),
      ],
    );
  }
}

class PanchangAshubhSamayWidget extends StatelessWidget {
  // const PanchangSurvodayaWidget({super.key});
  final PanchangBg bgImage;
  final PanditData data;
  const PanchangAshubhSamayWidget({
    Key? key,
    required this.bgImage,
    required this.data,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    double fontsize = 16;
    int infoFlext = 7;
    int titleFlext = 4;
    return Column(
      children: [
        ...List.generate(data.content?.inauspicious?.length ?? 0, (index) {
          return PanchangContentWidget(
            infoFlex: infoFlext,
            titleFlex: titleFlext,
            bgImage: bgImage,
            leftPadding: 3,
            data: data,
            title: data.content?.inauspicious?[index].hi![0],
            info: data.content?.inauspicious?[index].hi![1],
            founsize: fontsize,
          );
        }),
      ],
    );
  }
}

class PanchangPanchakRahitWidget extends StatelessWidget {
  // const PanchangSurvodayaWidget({super.key});
  final PanchangBg bgImage;
  final PanditData data;
  const PanchangPanchakRahitWidget({
    Key? key,
    required this.bgImage,
    required this.data,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    double fontsize = 12;
    int infoFlext = 7;
    int titleFlext = 4;
    return Column(
      children: [
        ...List.generate(data.content?.panchak?.panchakRahita?.length ?? 0,
            (index) {
          return PanchangContentWidget(
            infoFlex: infoFlext,
            titleFlex: titleFlext,
            bgImage: bgImage,
            leftPadding: 3,
            data: data,
            title: data.content?.panchak?.panchakRahita?[index].hi![0],
            info: data.content?.panchak?.panchakRahita?[index].hi![1],
            founsize: fontsize,
          );
        }),
      ],
    );
  }
}

class PanchangUdaylagnWidget extends StatelessWidget {
  // const PanchangSurvodayaWidget({super.key});
  final PanchangBg bgImage;
  final PanditData data;
  const PanchangUdaylagnWidget({
    Key? key,
    required this.bgImage,
    required this.data,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    double fontsize = 13;
    int infoFlext = 6;
    int titleFlext = 2;
    return Column(
      children: [
        ...List.generate(data.content?.panchak?.udayaLagna?.length ?? 0,
            (index) {
          return PanchangContentWidget(
            infoFlex: infoFlext,
            titleFlex: titleFlext,
            bgImage: bgImage,
            data: data,
            leftPadding: 3,
            title: data.content?.panchak?.udayaLagna?[index].hi![0],
            info: data.content?.panchak?.udayaLagna?[index].hi![1],
            founsize: fontsize,
          );
        }),
      ],
    );
  }
}

class PanchangContentWidget extends StatelessWidget {
  const PanchangContentWidget({
    Key? key,
    required this.bgImage,
    required this.data,
    this.title,
    this.founsize = 15,
    this.info,
    this.titleFlex = 2,
    this.leftPadding = 2,
    this.infoFlex = 5,
  }) : super(key: key);

  final PanchangBg bgImage;
  final PanditData data;
  final String? title;
  final String? info;
  final double founsize;
  final int leftPadding;
  final int titleFlex;
  final int infoFlex;

  @override
  Widget build(BuildContext context) {
    final mq = MediaQuery.of(context).size;
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Expanded(flex: leftPadding, child: SizedBox()),
        Expanded(
          flex: titleFlex,
          child: Text(
            (title ?? ""),
            textScaleFactor: 1,
            style: TextStyle(
                color: hexToColor(bgImage.indexColor ?? ""),
                fontSize: true ? mq.width * 0.03 : founsize,
                fontWeight: FontWeight.bold),
          ),
        ),
        Expanded(
          flex: infoFlex,
          child: Text(
            info ?? "",
            textScaleFactor: 1,
            style: TextStyle(
              color: hexToColor(bgImage.infoColor ?? ""),
              fontSize: true ? mq.width * 0.03 : founsize,
            ),
          ),
        ),
      ],
    );
  }
}
